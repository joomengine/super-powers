	/**
	 * Registers the service provider with a DI container.
	 *
	 * @param   Container  $container  The DI container.
	 *
	 * @return  void
	 * @since 5.0.3
	 */
	public function register(Container $container)
	{
		$container->alias(Row::class, 'Import.Row')
			->share('Import.Row', [$this, 'getRow'], true);

		$container->alias(Item::class, 'Import.Item')
			->share('Import.Item', [$this, 'getItem'], true);

		$container->alias(Message::class, 'Import.Message')
			->share('Import.Message', [$this, 'getMessage'], true);

		$container->alias(Status::class, 'Import.Status')
			->share('Import.Status', [$this, 'getStatus'], true);
	}

	/**
	 * Get The Row Class.
	 *
	 * @param   Container  $container  The DI container.
	 *
	 * @return  Row
	 * @since 5.0.3
	 */
	public function getRow(Container $container): Row
	{
		return new Row();
	}

	/**
	 * Get The Item Class.
	 *
	 * @param   Container  $container  The DI container.
	 *
	 * @return  Item
	 * @since 5.0.3
	 */
	public function getItem(Container $container): Item
	{
		return new Item(
			$container->get('Table.Validator'),
			$container->get('Data.Item'),
			$container->get('Import.Row')
		);
	}

	/**
	 * Get The Message Class.
	 *
	 * @param   Container  $container  The DI container.
	 *
	 * @return  Message
	 * @since 5.0.3
	 */
	public function getMessage(Container $container): Message
	{
		return new Message(
			$container->get('Data.Update'),
			$container->get('Data.Insert')
		);
	}

	/**
	 * Get The Status Class.
	 *
	 * @param   Container  $container  The DI container.
	 *
	 * @return  Status
	 * @since 5.0.3
	 */
	public function getStatus(Container $container): Status
	{
		return new Status(
			$container->get('Data.Item')
		);
	}